//filter.cpp
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "filter.h"

using namespace std;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Filter::Filter()
{
	coef = 0;
	xState = 0;
	yState = 0;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Filter::process(vector<float>& x)
{
    lowPassArray.resize(x.size());
    hiPassArray.resize(x.size());
   
    for(int i=0; i < x.size(); i++)
    {
        float y = (x[i] + xState - yState * (1-coef)) / (1+coef);
        xState = x[i];
        yState = y;

        lowPassArray[i] = yState;
        hiPassArray[i] = xState - yState;
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////